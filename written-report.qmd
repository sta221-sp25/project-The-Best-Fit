---
title: "Exploratory Data Analysis Written Report"
author: "The BEST Fit - Philip, Olivia, Leo, Allison"
date: "3/7/2025"
format: pdf
execute: 
  warning: false
  message: false
  echo: false
editor: visual
---

```{r}
#| label: load-pkg-data
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(knitr)
if (!requireNamespace("car", quietly = TRUE)) {
  install.packages("car")
}
library(car)

newsdf <- read_csv("data/OnlineNewsPopularity.csv")
```

Introduction:

**Exploratory Data Analysis:**

**Data Set Description**: 

Our project utilizes the University of California Irvine Machine Learning Repository’s  “Online News Popularity” data set. It includes share counts and descriptive characteristics for articles published by Mashable over two years (from 2013 to 2015). Mashable Inc. is a digital media website founded in 2005 and as of November 2015, it has over 6,000,000 Twitter followers and over 3,200,000 fans on Facebook. The data set in total, has 39644 observations, each representing an individual article. Observations include characteristics such as: Number of Words in Title/Content, Rate of Unique Words, Number of Images, Data Channel, Day Published, Rate of Positive/Negative Words, Polarity, etc.  Our intention is to use the data set to predict the number of shares/virality of an article based on different variables. 

**Key Variables**: 

rate_positive_words -  rate of positive words among non-neutral tokens, which captures how emotionally charged the language is. 

Rate_negative_words - rate of negative words among non-neutral tokens, which captures how emotionally charged the language is. 

title_sentiment_polarity - A measure of how polarizing the title is

N_tokens_content - A measure of how long the article’s content is 

N_tokens_title -  A measure of how long the article title is

data_channel - a catagorical variable denoting article topic merged from: Data_channel_is_entertainment, data_channel_is_bus, data_channel_is_socmed, data_channel_is_tech, and data_channel_is_world.

day_published- a catagorical variable indicating publication day merged from indicators: Weekday_is_monday, weekday_is_tuesday, weekday_is_wednesday, weekday_is_thursday, weekday_is_friday,weekday_is_saturday, weekday_is_sunday 

\break

[Data Cleaning]{.underline}

First we have to combine the existing weekday and data_channel indicator variables into their respective categorical variables.

```{r}
newsdf$day_published <- NA  # Create a new empty column

newsdf$day_published <- case_when(
  newsdf$weekday_is_monday == 1 ~ "Monday",
  newsdf$weekday_is_tuesday == 1 ~ "Tuesday",
  newsdf$weekday_is_wednesday == 1 ~ "Wednesday",
  newsdf$weekday_is_thursday == 1 ~ "Thursday",
  newsdf$weekday_is_friday == 1 ~ "Friday",
  newsdf$weekday_is_saturday == 1 ~ "Saturday",
  newsdf$weekday_is_sunday == 1 ~ "Sunday",
)

newsdf$day_published <- factor(
  newsdf$day_published,
  levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
)


newsdf$data_channel <- NA

newsdf$data_channel <- case_when(
  newsdf$data_channel_is_entertainment == 1 ~ "Entertainment",
  newsdf$data_channel_is_bus == 1 ~ "Business",
  newsdf$data_channel_is_socmed == 1 ~ "Social Media",
  newsdf$data_channel_is_tech == 1 ~ "Technology",
  newsdf$data_channel_is_world == 1 ~ "World",
)

newsdf$data_channel <- factor(newsdf$data_channel)


tab <- newsdf %>%
  select(url, day_published, data_channel) %>%
  head(5)
kable(tab, caption = "Transformed Data")
  
```

```{r}
ggplot(data =newsdf, aes(x=data_channel))+
  geom_bar(fill = "green")+
  labs(
    x ="Data Channel",
    y= "Relative Frequency", 
    title = "Distribution of article catagories"
  )
```

Next, we discovered that approx 8,233 articles are not tagged for a specific data channel. Due to the nature of the dataset, it's unclear if this was because the article was simply missing a tag, it was mis-tagged while being collected, or if it simply doesn't belong in any of these catagories. With the relatively large size of our dataset, we we decided to exclude entries lacking a data tag NA's from our data channel analysis altogether. These articles lacking a data channel were filtered out.

```{r}
newsdf<- newsdf |> 
  filter(!is.na(data_channel))
```

[Response Variable/Univariate EDA]{.underline}

```{r}
#| label: initial-explore

ggplot(newsdf, aes(x = shares)) +
  geom_histogram(binwidth = 500, fill = "blue", color = "black", alpha = 0.7) +
  scale_x_continuous(limits = c(0, 50000)) +  # Limit for better visualization
  labs(title = "Distribution of Article Shares",
       x = "Number of Shares",
       y = "Count") +
  theme_minimal()
```

```{r}
newsdf |>
  summarize(
    mean_shares = mean(shares),
    median_shares = median(shares),
    sd_shares = sd(shares),
    min_shares = min(shares),
    max_shares = max(shares),
    q1 = quantile(shares, 0.25),
    q3 = quantile(shares, 0.75)
  )
```

The distribution of \# of shares is highly right skewed, a median of 1400 shares and a few highly shared articles. Notably, the mean of 2878 shares is far larger

```{r}
#| label: zoom-in-response

ggplot(newsdf, aes(x = shares)) +
  geom_histogram(binwidth = 500, fill = "blue", color = "black", alpha = 0.7) +
  scale_x_continuous(limits = c(0, 10000)) +  # Zoom in on the first 10,000 shares
  labs(title = "Distribution of Article Shares (Zoomed In)",
       x = "Number of Shares",
       y = "Count") +
  theme_minimal()

```

To make deal with this strong right skew, we applied a log transformation to the share variable, yielding a less skewed distribution.

```{r}
#| label: log-transform

ggplot(newsdf, aes(x = log(shares))) +  
  geom_histogram(binwidth = 0.2, fill = "purple", color = "black", alpha = 0.7) +
  labs(title = "Log-Transformed Distribution of Shares",
       x = "Log(Shares)",
       y = "Count") +
  theme_minimal()
```

[Predictor Variable/Univariate EDA]{.underline}

```{r}
themeA <- theme_minimal() +
  theme(axis.title.y = element_blank())  

a1 <- ggplot(newsdf, aes(x = rate_positive_words)) +
  geom_histogram(binwidth = 0.02, fill = "green", color = "black") +
  labs(title = "Positive Words Rate",
       x = "Rate of positive words") + 
  themeA

a2 <- ggplot(newsdf, aes(x = rate_negative_words)) +
  geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
  labs(title = "Negative Words Rate",
       x = "Rate of negative words") + 
  themeA

a3 <- ggplot(newsdf, aes(x = title_sentiment_polarity)) +
  geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
  labs(title = "Title Polarity",
       x = "Polarity score") + 
  themeA

a4 <- ggplot(newsdf, aes(x = n_tokens_content)) +
  geom_histogram(binwidth = 100, fill = "purple", color = "black") +
  labs(title = "Article Length",
       x = "Number of words") + 
  themeA

a5 <- ggplot(newsdf, aes(x = n_tokens_title)) +
  geom_histogram(binwidth = 1, fill = "pink", color = "black") +
  labs(title = "Title Length",
       x = "Number of words") + 
  themeA

grid.arrange(a1, a2, a3, a4, a5, ncol = 3, 
             left = "Frequency", 
             top = "Distribution of Article Features")
```

Examining the rate of positive words in an article, we see a left skew distribution, with modes at \~0, \~0.75 and \~1. The median positivity is approx 0.71 positvity rate, and the range is from 0 to 1.

```{r}
ggplot(newsdf, aes(x = rate_positive_words)) +
  geom_histogram(binwidth = 0.02, fill = "green", color = "black") +
  labs(title = "Rel. Freq of Positive Words Rate",
       x = "Rate of positive words",
       y= "Frequency")
```

```{r}
newsdf |>
  summarize(
    mean= mean(rate_positive_words),
    median = median(rate_positive_words),
    std.dev = sd(rate_positive_words),
    min = min(rate_positive_words),
    max = max(rate_positive_words),
  )
```

The rate of negative words shows the opposite trend, with a slight right skew. Similarly, there seems to be a second mode at 0 negativity. The median is approx 0.28 negativity rate, with an approximately equal mean.

```{r}
ggplot(newsdf, aes(x = rate_negative_words)) +
  geom_histogram(binwidth = 0.02, fill = "red", color = "black") +
  labs(title = "Rel Freq of Negative Words Rate",
       x = "Rate of negative words",
       y= "Frequency")
```

```{r}
newsdf |>
  summarize(
    mean= mean(rate_negative_words),
    median = median(rate_negative_words),
    std.dev = sd(rate_negative_words),
    min = min(rate_negative_words),
    max = max(rate_negative_words),
  )
```

```{r}
ggplot(newsdf, aes(x = n_tokens_content)) +
  geom_histogram(binwidth = 100, fill = "purple", color = "black") +
  labs(title = "Rel. Freq. of Article Length",
       x = "Number of words",
       y= "frequency")

```

```{r}
newsdf |>
  summarize(
    mean= mean(n_tokens_content),
    median = median(n_tokens_content),
    std.dev = sd(n_tokens_content),
    min = min(n_tokens_content),
    max = max(n_tokens_content),
  )
```

For article length, the graph shows a strongly right skewed distribution, with a median length of 444 and a high standard deveation of 477 words. To remedy this, we might consider a log transfromation which yields a more even distribution.

```{r}
ggplot(newsdf, aes(x = log(n_tokens_content))) +
  geom_histogram( fill = "purple", color = "black") +
  labs(title = "Rel. Freq of Log transformed Article Length",
       x = "log of # of words",
       y= "frequency")
```

For the number of tokens in the title, we can see a highly symetric distribution centered at 10, with a standard deviation of 2.14.

```{r}
ggplot(newsdf, aes(x = n_tokens_title)) +
  geom_histogram(binwidth = 1, fill = "pink", color = "black") +
  labs(title = "Rel. Freq. of Title Length",
       x = "Number of words",
       y= "frequency")
```

```{r}
newsdf |>
  summarize(
    mean= mean(n_tokens_title),
    median = median(n_tokens_title),
    std.dev = sd(n_tokens_title),
    min = min(n_tokens_title),
    max = max(n_tokens_title),
  )
```

Finally, our initial EDA of title polarity found a massive frequency spike at 0 frequency, which might correspond to failed measurements or the vast majority of our articles not presenting signifigant title polarity. As such, we will discard title polarity as a predictor.

```{r}
ggplot(newsdf, aes(x = title_sentiment_polarity)) +
  geom_histogram(binwidth = 0.02, fill = "blue", color = "black") +
  labs(title = "Title Polarity",
       x = "Polarity score",
       y= "Frequency") 
```

#Try binning into catsgorical

[Bi-variate EDA]{.underline}

```{r}
p1 <- ggplot(newsdf, aes(x = rate_positive_words, y = log(shares))) +
  geom_point( color = "blue") +
  geom_smooth(method = "lm", color = "red") +
  labs(title = "Log(Shares) vs Rate of Positive Words",
       x = "Rate of Positive Words", 
       y = "Log(Shares)") +
  theme_minimal()

p2 <- ggplot(newsdf, aes(x = rate_negative_words, y = log(shares))) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", color = "red") +
  labs(title = "Log(Shares) vs Rate of Negative Words",
       x = "Rate of Negative Words", 
       y = "Log(Shares)")
grid.arrange(p1, p2, ncol = 2)
```

```{r}
#| label: distribution-day 

news_summary <- newsdf |>
  group_by(day_published) |> 
  summarize(mean_shares = mean(shares)) 

head(news_summary)
news_summary|>
  ggplot(aes(x = day_published, y = mean_shares)) +
  geom_bar(stat = "identity", fill = "skyblue") + 
  labs(
    x = "Day Published", 
    y = "Mean Number of Article Shares",
    title = "Mean Number of Article Shares vs. Day Published"
  )

```

```{r}
model <- lm(log(shares) ~ rate_negative_words + rate_positive_words, data =newsdf ) 
  tidy(model)|>
  kable(digits=3)

```

```{r}
vif_values <- vif(model)
print("Variance Inflation Factors:")
print(vif_values)
```

This visualization and summarization suggests that the day an article is published does not have a significant impact on the virality of an article, as the mean number of article shares do not differ much between days. Therefore, this predictor may not be as important as others when it comes to predicting the virality of an article.

```{r}
#| label: data-channel-vis 

news_summary_channel <- newsdf |>
  group_by(data_channel) |> 
  summarize(mean_shares = mean(shares)) 

head(news_summary_channel)
news_summary_channel |>
  drop_na(data_channel) |>
  ggplot(aes(x = data_channel, y = mean_shares)) +
  geom_bar(stat = "identity", fill = "skyblue") + 
  labs(
    x = "Data Channel", 
    y = "Mean Number of Article Shares",
    title = "Mean Number of Article Shares vs. Data Channel"
  )
```

From our visualizations, it appears that articles that are in the social media data channel perform the best in terms of average number of shares (\~3600), while articles that are in the World data channel perform the worst (\~2250). Business, Entertainment, and Technology articles all seem to receive a mean of about 3000 shares. However, from our earlier univariate analysis, we saw that the Social Media Data Channel has the lowest number of articles, and thus there is a possibility that any outliers for this data channel category would have a larger impact in skewing the mean.
