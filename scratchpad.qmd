---
title: "Project Proposal"
author: "The BEST Fit - Olivia Encarcion, Leo Yang, Philip Lin, Allison Yang"
format: pdf
execute: 
  warning: false
editor: visual
---

```{r}
newsdf$is_viral <- ifelse(newsdf$shares >= 1400, 1, 0)


logistic_model <- glm(is_viral ~ kw_avg_avg  + n_tokens_content + data_channel +
                  is_weekend + global_subjectivity +
                  title_sentiment_polarity, 
                family = binomial(link = "logit"),
                data = newsdf)

```

```{r}
pred_prob <- predict.glm(logistic_model, type = "response")

model_aug <- augment(logistic_model)

model_aug <- model_aug |>
  mutate(is_viral = as.factor(is_viral))

model_aug <- model_aug |>
  bind_cols(pred_prob = pred_prob)
# calculate sensitivity and specificity at each threshold
roc_curve_data <- model_aug |>
roc_curve(is_viral, pred_prob,
event_level = "second")
# plot roc curve
autoplot(roc_curve_data)
```

```{r}

target_sensitivity <- 0.65

closest_point <- roc_curve_data |>
  mutate(diff = abs(sensitivity - target_sensitivity)) |>
  arrange(diff) |> 
  slice(1)

closest_point$.threshold
```

```{r}
log_odds <- predict(logistic_model, newsdf)
newsdf <- newsdf |>
  bind_cols(log_odds = log_odds)
newsdf <- newsdf |>
  mutate(
    predict_prob = exp(log_odds) / (1 + exp(log_odds))
  )

newsdf <- newsdf |>
  mutate(
    estimateVirality = case_when(
      predict_prob < 0.4916522 ~ 0,
      predict_prob > 0.4916522 ~ 1,
      TRUE ~ NA_real_  
    )
  )

newsdf <- newsdf |> 
  mutate(
         estimateVirality = as.factor(estimateVirality),
         is_viral = as.factor(is_viral)
         )

model_conf <- newsdf |>
  conf_mat(is_viral,estimateVirality)

autoplot(model_conf, type="heatmap")
```

```{r}

newsdf$is_viral <- as.factor(newsdf$is_viral)

ggplot(data = newsdf, aes(x=data_channel, fill=is_viral )) + 
    geom_bar(position="fill")


```

```{r}
newsdf <- newsdf|>
  mutate(
    is_viral = factor(is_viral, 
                       levels = c(0,1), 
                       labels = c("Not Viral", "Viral"))
  )

ggplot(data = newsdf, aes(x=day_published, fill=is_viral )) + 
    geom_bar(position="fill")

```

`{# TODO - Subjectiity has varying effects based on data channel, show that}`

```{r}
#| label: interaction-subjectivity-data_channel 

ggplot(newsdf, aes(fill=is_viral, y=global_subjectivity)) + 
  geom_boxplot(position = position_dodge()) + 
  facet_wrap(~ data_channel) + 
  coord_flip(ylim = c(0, 0.6)) + 
  labs(
    y = "Global Subjectivity", 
    fill = "Virality"
  )

```

```{r}
#| label: interaction-length-virality 
ggplot(newsdf, aes(fill=is_viral, y=log(n_tokens_content))) + 
  geom_boxplot(position = position_dodge(width = 0.8)) + 
  facet_wrap(~ data_channel) + 
  coord_cartesian(ylim = c(-0.1, 0.1)) + 
  coord_flip(ylim = c(4, 8)) +
  labs(
    y = "Article Body Length (log transformed)", 
    fill = "Virality"
  )
```
